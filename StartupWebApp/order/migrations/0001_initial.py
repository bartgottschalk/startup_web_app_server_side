# Generated by Django 2.2 on 2019-04-22 15:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cartpayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_customer_token', models.CharField(blank=True, max_length=100, null=True)),
                ('stripe_card_id', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                'db_table': 'order_cart_payment',
            },
        ),
        migrations.CreateModel(
            name='Cartshippingaddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=40, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('country_code', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'order_cart_shipping_address',
            },
        ),
        migrations.CreateModel(
            name='Discounttype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('applies_to', models.CharField(max_length=100)),
                ('action', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'order_discount_type',
            },
        ),
        migrations.CreateModel(
            name='Orderbillingaddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=40, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('country_code', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'order_order_billing_address',
            },
        ),
        migrations.CreateModel(
            name='Orderconfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('float_value', models.FloatField(blank=True, null=True)),
                ('string_value', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'order_configuration',
            },
        ),
        migrations.CreateModel(
            name='Orderpayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=254, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=20, null=True)),
                ('card_name', models.CharField(blank=True, max_length=200, null=True)),
                ('card_brand', models.CharField(blank=True, max_length=20, null=True)),
                ('card_last4', models.CharField(blank=True, max_length=4, null=True)),
                ('card_exp_month', models.CharField(blank=True, max_length=2, null=True)),
                ('card_exp_year', models.CharField(blank=True, max_length=4, null=True)),
                ('card_zip', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'order_order_payment',
            },
        ),
        migrations.CreateModel(
            name='Ordershippingaddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=40, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('country_code', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'order_order_shipping_address',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('title_url', models.CharField(max_length=100)),
                ('identifier', models.CharField(max_length=100, unique=True)),
                ('headline', models.CharField(blank=True, max_length=5000, null=True)),
                ('description_part_1', models.CharField(blank=True, max_length=5000, null=True)),
                ('description_part_2', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'order_product',
            },
        ),
        migrations.CreateModel(
            name='Shippingmethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=100)),
                ('carrier', models.CharField(max_length=100)),
                ('shipping_cost', models.FloatField(blank=True)),
                ('tracking_code_base_url', models.CharField(max_length=200)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'order_shipping_method',
            },
        ),
        migrations.CreateModel(
            name='Sku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(blank=True, max_length=500, null=True)),
                ('size', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'order_sku',
            },
        ),
        migrations.CreateModel(
            name='Skuinventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('identifier', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'order_sku_inventory',
            },
        ),
        migrations.CreateModel(
            name='Skutype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'order_sku_type',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'order_status',
            },
        ),
        migrations.CreateModel(
            name='Skuprice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('created_date_time', models.DateTimeField()),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Sku')),
            ],
            options={
                'db_table': 'order_sku_price',
            },
        ),
        migrations.CreateModel(
            name='Skuimage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.CharField(max_length=500)),
                ('main_image', models.BooleanField(default=False)),
                ('caption', models.CharField(blank=True, max_length=500, null=True)),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Sku')),
            ],
            options={
                'db_table': 'order_sku_image',
            },
        ),
        migrations.AddField(
            model_name='sku',
            name='sku_inventory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Skuinventory'),
        ),
        migrations.AddField(
            model_name='sku',
            name='sku_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Skutype'),
        ),
        migrations.CreateModel(
            name='Productvideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_url', models.CharField(max_length=500)),
                ('video_thumbnail_url', models.CharField(max_length=500)),
                ('caption', models.CharField(blank=True, max_length=500, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Product')),
            ],
            options={
                'db_table': 'order_product_video',
            },
        ),
        migrations.CreateModel(
            name='Productimage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.CharField(max_length=500)),
                ('main_image', models.BooleanField(default=False)),
                ('caption', models.CharField(blank=True, max_length=500, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Product')),
            ],
            options={
                'db_table': 'order_product_image',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('sales_tax_amt', models.FloatField(default=0)),
                ('item_subtotal', models.FloatField(default=0)),
                ('item_discount_amt', models.FloatField(default=0)),
                ('shipping_amt', models.FloatField(default=0)),
                ('shipping_discount_amt', models.FloatField(default=0)),
                ('order_total', models.FloatField(default=0)),
                ('agreed_with_terms_of_sale', models.BooleanField(default=False)),
                ('order_date_time', models.DateTimeField()),
                ('billing_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.Orderbillingaddress')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Member')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.Orderpayment')),
                ('prospect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Prospect')),
                ('shipping_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.Ordershippingaddress')),
            ],
            options={
                'db_table': 'order_order',
            },
        ),
        migrations.CreateModel(
            name='Discountcode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('start_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField()),
                ('combinable', models.BooleanField(default=False)),
                ('discount_amount', models.FloatField(default=0)),
                ('order_minimum', models.FloatField(default=0)),
                ('discounttype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Discounttype')),
            ],
            options={
                'db_table': 'order_discount_code',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymous_cart_id', models.CharField(blank=True, max_length=100, null=True)),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Member')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.Cartpayment')),
                ('shipping_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.Cartshippingaddress')),
            ],
            options={
                'db_table': 'order_cart',
            },
        ),
        migrations.CreateModel(
            name='Productsku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Product')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Sku')),
            ],
            options={
                'db_table': 'order_product_sku',
                'unique_together': {('product', 'sku')},
            },
        ),
        migrations.CreateModel(
            name='Orderstatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date_time', models.DateTimeField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Order')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Status')),
            ],
            options={
                'db_table': 'order_order_status',
                'unique_together': {('order', 'status')},
            },
        ),
        migrations.CreateModel(
            name='Ordersku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('price_each', models.FloatField(default=0)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Order')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Sku')),
            ],
            options={
                'db_table': 'order_order_sku',
                'unique_together': {('order', 'sku')},
            },
        ),
        migrations.CreateModel(
            name='Ordershippingmethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Order')),
                ('shippingmethod', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Shippingmethod')),
            ],
            options={
                'db_table': 'order_order_shipping_method',
                'unique_together': {('order', 'shippingmethod')},
            },
        ),
        migrations.CreateModel(
            name='Orderdiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied', models.BooleanField(default=False)),
                ('discountcode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Discountcode')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Order')),
            ],
            options={
                'db_table': 'order_order_discount',
                'unique_together': {('order', 'discountcode')},
            },
        ),
        migrations.CreateModel(
            name='Cartsku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Cart')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Sku')),
            ],
            options={
                'db_table': 'order_cart_sku',
                'unique_together': {('cart', 'sku')},
            },
        ),
        migrations.CreateModel(
            name='Cartshippingmethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Cart')),
                ('shippingmethod', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Shippingmethod')),
            ],
            options={
                'db_table': 'order_cart_shipping_method',
                'unique_together': {('cart', 'shippingmethod')},
            },
        ),
        migrations.CreateModel(
            name='Cartdiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Cart')),
                ('discountcode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Discountcode')),
            ],
            options={
                'db_table': 'order_cart_discount',
                'unique_together': {('cart', 'discountcode')},
            },
        ),
    ]
